#!/usr/bin/env php
<?php


/*
|--------------------------------------------------------------------------
| Create The Application
|--------------------------------------------------------------------------
|
| First we need to get an application instance. This creates an instance
| of the application / container and bootstraps the application so it
| is ready to receive HTTP / Console requests from the environment.
|
*/

use component\Console\Input\ArgvInput;
use component\Console\Output\ConsoleOutput;

$app = require __DIR__.'/bootstrap/app.php';

/*
|--------------------------------------------------------------------------
| Run The Artisan Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/

/**
 * @var $kernel \app\Console\Kernel
 */
$kernel = $app->make(component\Contracts\Console\Kernel::class);

$status = $kernel->handle(
        $input = new ArgvInput(),
        new ConsoleOutput()
);

/*
|--------------------------------------------------------------------------
| Shutdown The Application
|--------------------------------------------------------------------------
|
| Once Artisan has finished running, we will fire off the shutdown events
| so that any final work may be done by the application before we shut
| down the process. This is the last thing to happen to the request.
|
*/

//$kernel->terminate($input, $status);

exit($status);
