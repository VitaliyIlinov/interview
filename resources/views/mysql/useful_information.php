<h2>Нормализация базы данных</h2>
<p>Источники&raquo;
    <a class="btn btn-secondary" target="_blank"
       href="https://devionity.com/ru/courses/mysql-fundamentals/creating-a-db" role="button">
        devionity
    </a>
</p>
<p>
    это процесс приведения способа хранения информации к наиболее оптимальному, безопасному и гибкому. Проще говоря,
    существуют несколько простых правил, которым следует следовать при моделировании базы данных. Эти правила образуют
    т.н. нормальные формы. Перечислим основные правила нормализация.
</p>
<ul>
    <li>
        В каждой таблице должен быть <b>первичный ключ.</b>
    </li>
    <li>Записи каждой таблицы не должны повторяться (это следствие предыдущего пункта).
    </li>
    <li>В одной таблице не должно быть одинаковых полей.
    </li>
    <li>НАтомарность: таблица не может содержать другую таблицу, она может содержать только конкретное значение из
        другой таблицы.
    </li>
    <li>Наличие внешнего ключа для связывания разных таблиц.</li>
</ul>

<h2>Типы данных:</h2>
<p>
    В MySQL числовые типы данных - это целые числа и числа с плавающей точкой..
</p>
<p>
    Целые числа в MySQL определяются ключевыми словами TINYINT, SMALLINT, MEDIUMINT, INT, BIGINT
</p>
<p>
    Числа с плавающей точкой в MySQL определены ключевыми словами FLOAT и DOUBLE
</p>
<p>
    Тип TINYINT определяет целые числа в диапазоне от -128 до 127 (включительно). При использовании атрибута
    UNSIGNED(без
    знака) этот диапазон будет включать числа от 0 до 255. Таким образом этот тип вмещает 28 чисел.<br>
    Остальные целочисленные типы отличаются диапазоном,Рассмотрим целочисленные типы данных
</p>
<ul>
    <li>
        SMALLINT: 216 чисел, [ -32 768 ... 32 767 ]
    </li>
    <li>
        SMALLINT UNSIGNED : [ 0 ... 65 535 ]
    </li>
    <li>
        MEDIUMINT : 224 чисел, [ -8 388 608 ... 8 388 607 ]
    </li>
    <li>
        MEDIUMINT UNSIGNED : [ 0 ... 16 777 215 ]
    </li>
    <li>
        INT : 232 чисел, [ -2 147 483 648 ... 2 147 483 647 ]
    </li>
    <li>
        INT UNSIGNED : [ 0 ... 4 294 967 295 ]
    </li>
    <li>
        BIGINT : 264 чисел, [ -9 223 372 036 854 775 808 ... 9 223 372 036 854 775 807 ]
    </li>
    <li>
        BIGINT UNSIGNED : [ 0 ... 18 446 744 073 709 551 615 ]
    </li>
</ul>

<p>
    Атрибут UNSIGNED означает неотрицательные числа. Фактически этот атрибут сдвигает диапазон так, чтобы он начинался с
    нуля
</p>
<p>
    После указания одного из этих типов допускается указание максимального количество символов для отображения этого
    числа. Этот параметр не влияет на диапазон. Например INT(3) означает что отображение этого числа будет рассчитано на
    трехзначные числа
</p>

<h2> Создание БД</h2>
<p><code>CREATE DATABASE my_db CHARACTER SET utf8 COLLATE utf8_general_ci ; </code></p>

<h2> Создание таблицы</h2>
<p>
<pre>
    <code>
        CREATE TABLE student (
        id INT AUTO_INCREMENT,
        name VARCHAR(30),
        age TINYINT,
        phone VARCHAR(15),
        PRIMARY KEY (id)
        );
    </code>
    </pre>
Для получения информации от созданной таблице используется оператор DESCRIBE:
<pre>
    <code>
        DESCRIBE student ;
    </code>
</pre>
</p>

<h2> Удаление БД</h2>
<pre>
    <code>
       DROP DATABASE my_db ; - удаление базы данных my_db
       DROP TABLE my_table ; - удаление таблицы my_table
    </code>
</pre>

<h2> Вставка данных: оператор INSERT</h2>
<pre>
    <code>
      INSERT INTO <таблица>  [ ( <названия полей> ) ]  VALUES ( <значения> ) ;
      INSERT INTO student VALUES ( NULL, 'Mike', 25, '345-65-78' ) ;
    </code>
</pre>
https://devionity.com/ru/courses/mysql-fundamentals/insert