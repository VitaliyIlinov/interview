<h2>
    Абстрактная фабрика
    <a class="btn btn-secondary" target="_blank"
       href="https://tproger.ru/translations/design-patterns-simple-words-1/#12">
        tproger
    </a>
    <a class="btn btn-secondary" target="_blank"
       href="https://refactoring.guru/ru/design-patterns/abstract-factory/php/example#example-1">
        refactoring.guru
    </a>
</h2>

<p>
    Это порождающий паттерн проектирования, который определяет общий интерфейс для создания объектов в суперклассе,
    позволяя подклассам изменять тип создаваемых объектов.редоставляет интерфейс для создания семейств взаимосвязанных
    или взаимозависимых объектов, не специфицируя их конкретных классов. Шаблон реализуется созданием абстрактного
    класса Factory, который представляет собой интерфейс для создания компонентов системы (например, для оконного
    интерфейса он может создавать окна и кнопки). Затем пишутся классы, реализующие этот интерфейс.
</p>

<p>
    <b>Пример из жизни</b>: В зависимости от ваших нужд вам понадобится деревянная дверь из одного магазина, железная
    дверь — из другого или пластиковая — из третьего. Кроме того, вам понадобится соответствующий специалист: столяр для
    деревянной двери, сварщик для железной двери и так далее. Как вы можете заметить, тут есть зависимость между
    дверьми.
    <b>Простыми словами</b>:Фабрика фабрик. Фабрика, которая группирует индивидуальные, но связанные/зависимые фабрики
    без указания их конкретных классов. у нас есть несколько однотипных фабрик и мы хотим инкапсулировать логику выбора,
    какую из фабрик использовать для той или иной задачи
</p>
<pre>
    <code class="php">
        <?= $content ?>
    </code>
</pre>
<p>
    <b>Когда использовать</b>: Когда есть взаимосвязанные зависимости с не очень простой логикой создания.
</p>